/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
void reorderList(struct ListNode* head){
    struct ListNode *n = head;
    int count = 0;
    while(n){count++; n = n->next;}
    if(count == 1){return;}
    struct ListNode **array = (struct ListNode **)malloc(sizeof(struct ListNode *) * count);
    n = head;
    int i = 0;
    while(n){
        array[i] = n;
        i++; n = n->next;
    }
    n = head;
    int start = 1, end = count - 1;
    while(start <= end){
        n->next = array[end];
        n = n->next;
        end--;
        if(start > end){break;}
        n->next = array[start];
        n = n->next;
        start++;
    }
    n->next = NULL;
}

// use a array to save the listNode
// ex : 1, 2, 3, 4, 5
// -> [1, 2, 3, 4, 5]
//        ^ left   ^ right
// -> while(left < right) {
//    head->next = array[right];
//    head = head->next;
//    if(left > right){break;}
//    head->next = array[left];
//    head = head->next;
// }
